name: Create Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=major_version::$MAJOR_VERSION"
      
      - name: Set up Git
        run: |
          git config --global user.email "cluster-dev@cartesia-education.fr"
          git config --global user.name "clustercartesiaeducation"
      
      - name: Create Git tags
        id: create_tag
        run: |
          git tag v${{ env.VERSION }}
          if [[ "${{ env.MAJOR_VERSION }}" == "1" ]]; then
            git tag -f v1
          elif [[ "${{ env.MAJOR_VERSION }}" == "2" ]]; then
            git tag -f v2
          # Add more elif statements for additional major versions if needed
          fi
          git push origin v${{ env.VERSION }}
          if [[ "${{ env.MAJOR_VERSION }}" == "1" ]]; then
            git push origin -f v1
          elif [[ "${{ env.MAJOR_VERSION }}" == "2" ]]; then
            git push origin -f v2
          fi
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
