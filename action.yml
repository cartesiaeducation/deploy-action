name: 'Deploy Action'
description: 'A reusable GitHub Action for deploying to different environments.'
inputs:
  ip:
    description: 'IP address for the environment'
    required: true
  slack_bot_token:
    description: 'Slack bot token'
    required: true
  slack_channel_id:
    description: 'Slack notification channel ID'
    required: true
  ssh_private_key:
    description: 'SSH private key'
    required: true
  git_organization:
    description: 'Git organization'
    required: true
  deploy:
    description: 'Deploy to environment ? (true/false)'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - id: slack
      uses: slackapi/slack-github-action@v1.25.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        payload: |
          {
            "text": "<https://github.com/${{ github.repository }}|${{ github.repository }}> : Deployment started in branch `${{ github.ref_name }}` in server with ip address ${{ inputs.ip }} (In Progress) - Build Link: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click here for build details>",
            "attachments": [
              {
                "pretext": "Deployment started",
                "color": "dbab09",
                "fields": [
                  {
                    "title": "Status",
                    "short": true,
                    "value": "In Progress"
                  }
                ]
              }
            ]
          }
    
    - name: Checkout
      uses: actions/checkout@v3
    
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true
    
    - name: Setup SSH Keys
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ inputs.ssh_private_key }}
    
    - name: Deploy to recette
      if: ${{ inputs.has_recette == 'true' }} && ${{ inputs.deploy_to_recette == 'true' }}
      run: |
        if [[ -z "${{ inputs.ip_recette }}" ]]; then
          echo "Error: IP_RECETTE is required when has_recette is true"
          exit 1
        fi
        BRANCH=master IP=${{ inputs.ip_recette }} GIT_ORGANIZATION=${{ inputs.git_organization }} bundle exec cap recette deploy
      shell: bash
    
    - name: Deploy to demo
      if: ${{ inputs.has_demo == 'true' }} && ${{ inputs.deploy_to_demo == 'true' }}
      run: |
        if [[ -z "${{ inputs.ip_demo }}" ]]; then
          echo "Error: IP_DEMO is required when has_demo is true"
          exit 1
        fi
        BRANCH=master IP=${{ inputs.ip_demo }} GIT_ORGANIZATION=${{ inputs.git_organization }} bundle exec cap staging deploy
      shell: bash
    
    - name: Deploy to prod
      if: ${{ inputs.has_production == 'true' }} && ${{ inputs.deploy_to_production == 'true' }}
      run: |
        if [[ -z "${{ inputs.ip_prod }}" ]]; then
          echo "Error: IP_PROD is required when has_production is true"
          exit 1
        fi
        BRANCH=master IP=${{ inputs.ip_prod }} GIT_ORGANIZATION=${{ inputs.git_organization }} bundle exec cap prod deploy
      shell: bash
    
    - uses: slackapi/slack-github-action@v1.25.0
      if: always()
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
      with:
        channel-id: ${{ inputs.slack_channel_id }}
        update-ts: ${{ steps.slack.outputs.ts }}
        payload: |
          {
            "text": "Repository: <https://github.com/${{ github.repository }}|${{ github.repository }}> - Deployment Status in branch `${{ github.ref_name }} in server with ip address ${{ inputs.ip }}`: ${{ job.status }} - Build Link: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click here for build details>",
            "attachments": [
              {
                "pretext": "Deployment Status: ${{ job.status }}",
                "color": "${{ job.status == 'success' && '28a745' || 'ff0000' }}",
                "fields": [
                  {
                    "title": "Status",
                    "short": true,
                    "value": "${{ job.status == 'success' && 'Completed' || 'Failure' }}"
                  }
                ]
              }
            ]
          }
